name: Build and Test
on:
  push:
    branches:
      - main
  pull_request: {}
jobs:
  ui_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: UI Test with toolchain stable
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --test ui --features "derive"
  build_and_test:
    runs-on: ${{ matrix.config.os }}
    strategy:
      # report each failing OS/toolchain build - useful for separating between OS failures vs. toolchain (nightly) failures
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            features: default
          - os: macos-latest
            features: default
          - os: windows-latest
            features: rustls-tls
        toolchain:
          - stable
        features:
          - "derive"
          - "derive-admission-webhook"
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          default: true
          components: clippy, rustfmt
      - name: Build with toolchain ${{ matrix.toolchain }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --no-default-features --features "${{ matrix.features }} ${{ matrix.config.features }}"
      - name: Test with toolchain ${{ matrix.toolchain }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --lib --no-default-features --features "${{ matrix.features }} ${{ matrix.config.features }}"
      - name: Test docs with toolchain ${{ matrix.toolchain }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --all --no-default-features --features "${{ matrix.features }} ${{ matrix.config.features }}"
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --no-default-features --features "${{ matrix.features }} ${{ matrix.config.features }}"
